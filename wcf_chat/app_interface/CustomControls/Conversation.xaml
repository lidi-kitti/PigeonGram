<UserControl x:Class="app_interface.CustomControls.Conversation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:app_interface.AttachedProperties" 
             xmlns:viewmodels="clr-namespace:app_interface.ViewModels" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors" d:DataContext="{d:DesignInstance Type=viewmodels:ViewModel}"
             mc:Ignorable="d" 
             Height="Auto"
             Width="Auto"
             x:Name="_conversations">

    <UserControl.Resources>
			<Style x:Key="MessageTextStyle" TargetType="{x:Type TextBlock}">
				<Setter Property="FontSize" Value="15"/>
				<Setter Property="FontWeight" Value="SemiBold"/>
				<Setter Property="Margin" Value="20"/>
				<Setter Property="Foreground" Value="Black"/>
				<Setter Property="HorizontalAlignment" Value="Center"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="TextWrapping" Value="Wrap"/>
            <Style.Triggers>
					<DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
						<Setter Property="Text" Value="{Binding ReceivedMessage}"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
						<Setter Property="Text" Value="{Binding SentMessage}"/>
					</DataTrigger>
			</Style.Triggers>
			</Style>
		<DataTemplate x:Key="ItemTemplate">
            <Button >
				<Button.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="SnapsToDevicePixels" Value="True"/>
						<Setter Property="Height" Value="Auto"/>
						<Setter Property="Padding" Value="4,1"/>
						<Setter Property="Margin" Value="10"/>
						<Setter Property="HorizontalContentAlignment" Value="Center"/>
						<Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
						<Setter Property="Background" Value="Transparent"/>
						<Setter Property="BorderThickness" Value="0"/>

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Border
										   Background="{TemplateBinding Background}"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											Padding="{TemplateBinding Padding}"
											SnapsToDevicePixels="True"
											x:Name="border">
										<Grid>
									<Grid.RowDefinitions>
										<!--Reply bubble-->
										<RowDefinition Height="Auto"/>

										<!-- Message bubble-->
										<RowDefinition/>

										<!--Message Time-->
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Grid Grid.Row="1">
										<Grid.ColumnDefinitions>
											<!-- Column reply button-->
											<ColumnDefinition Width="Auto"/>
											
											<!-- Column Message Bubble-->
											<ColumnDefinition/>
											
											<!-- Column reply button-->
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<!-- Message Bubble-->
										<Border
											Grid.Column="1"
                                            Height="Auto"
										    MinHeight="60"
                                            MaxWidth="800"
											Width="Auto"
											VerticalAlignment="Center">
											<Border.Style>
												<Style TargetType="{x:Type Border}">
													<Setter Property="CornerRadius" Value="30,30,30,0"/>
													<Setter Property="Background" Value="#dce1de"/>
													<Setter Property="HorizontalAlignment" Value="Left"/>
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsReceived}" Value="False">
															<Setter Property="CornerRadius" Value="30,30,0,30"/>
															<Setter Property="Background" Value="DeepSkyBlue"/>
															<Setter Property="HorizontalAlignment" Value="Right"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Border.Style>

											<!--Message text -->
											<DockPanel
                                                
											MaxHeight="700">
												<TextBlock
													Style="{StaticResource MessageTextStyle}"/>
											</DockPanel>
										</Border>
										<!-- Reply button -->
										<Button 
											x:Name="ReplyButton"
                                            Command="{Binding DataContext.ReplyCommand, ElementName=_conversations}"
                                            CommandParameter="{Binding}"
											Content="{StaticResource reply}"
											Visibility="Collapsed"
											Grid.Column="2"
											Style="{StaticResource IconButtonStyle}"/>
									</Grid>
									<!--Message time-->
									<TextBlock
                                        x:Name="messageTime"
										Grid.Row="2"
                                        Opacity="0">
										<TextBlock.Style>
											<Style TargetType="{x:Type TextBlock}">
												<Setter Property="VerticalAlignment" Value="Center"/>
												<Setter Property="Margin" Value="0,10,20,0"/>
												<Style.Triggers>
													<DataTrigger Binding="{Binding IsMessageReceived}" Value="True">
														<Setter Property="Text" Value="{Binding MsgReceivedOn}"/>
														<Setter Property="HorizontalAlignment" Value="Left"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
														<Setter Property="Text" Value="{Binding MsgSentOn}"/>
														<Setter Property="HorizontalAlignment" Value="Right"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
                                
								<DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
									<Setter TargetName="ReplyButton" Property="Grid.Column" Value="0"/>
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                        </DataTrigger>
								
									<Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ReplyButton" Property="Visibility" Value="Visible"/>

                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="messageTime"
                                                                         Storyboard.TargetProperty="Opacity" To="1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>

                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="messageTime"
                              Storyboard.TargetProperty="Opacity" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>

                                            </Trigger.ExitActions>
                                        </Trigger>
								
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
				</Button.Style>
			</Button>
		</DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <!-- Search Box Row-->
            <RowDefinition Height="Auto"/>
            <!-- Conersation Body-->
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!--Search Box-->
        <Border
                    Background="#dce1de"
                    CornerRadius="15"
                    
                    Margin="20"
                    Height="50"
                    x:Name="SearchBoxBorder"
                    FocusManager.FocusedElement="{Binding ElementName=searchQuery}">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSearchConversationBoxOpen, Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged, FallbackValue=False}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <!--FocusManager.FocusedElement="{Binding ElementName=searchQuery -> 
                    to focus our textbox when border gets focused.. -->
            <TextBox
					Background="Transparent"
				  BorderThickness="0"
				  Name="searchQuery"
				  Padding="12,0"
				  Text="{Binding SearchConversationText, UpdateSourceTrigger=PropertyChanged}"
				  VerticalContentAlignment="Center"
				  VerticalAlignment="Stretch">
                
						<!-- key binding to search on enter key press-->
						<TextBox.InputBindings>
							<KeyBinding Command="{Binding SearchConversationCommand}" Key="Return"/>
                    <KeyBinding Command="{Binding ClearConversationSearchCommand}" Key="Return"/>
                </TextBox.InputBindings>
            </TextBox>

        </Border>
        <!--body-->
        <ScrollViewer 
            Background="WhiteSmoke"
            HorizontalScrollBarVisibility="Disabled"
            local:ScrollViewerAttachedProperty.AutoScroll="True"
            Grid.Row="1"
			>
            <ItemsControl
                
                ItemsSource="{Binding FilteredConversations, 
                UpdateSourceTrigger=PropertyChanged}"
				ItemTemplate="{StaticResource ItemTemplate}"
                Margin="15,0,0,0"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
               <!--animation om msg item add-->
                <StackPanel>
                    <ListBox x:Name="chatbox"/>
                </StackPanel>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel>
                            
                            <b:Interaction.Behaviors>
                                
                                <b:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.25"/>
                            </b:Interaction.Behaviors>
                        </StackPanel>
                    </ItemsPanelTemplate>	
                </ItemsControl.ItemsPanel>
            
            </ItemsControl>
        </ScrollViewer>
            
    </Grid>
</UserControl>
